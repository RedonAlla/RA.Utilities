# .github/workflows/publish-nuget.yml
name: Publish NuGet Package on Tag

on:
  push:
    tags:
      - '*-V*.*.*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          # Use .NET 8.0 which is stable, or if you need 10.0, use a specific version
          dotnet-version: 10.0.0-rc.2

      - name: Parse Tag and Set Environment Variables
        run: |
          TAG_NAME="${{ github.ref_name }}"

          PACKAGE_NAME="${TAG_NAME%-V*}"
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV

          PACKAGE_VERSION="${TAG_NAME##*-V}"
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

          PROJECT_FILE_PATH=$(find . -type f -name "${PACKAGE_NAME}.csproj" | head -n 1)
          echo "PROJECT_FILE_PATH=${PROJECT_FILE_PATH}" >> $GITHUB_ENV

      - name: Show project info
        run: |
          echo "Project file: ${{ env.PROJECT_FILE_PATH }}"
          echo "Target framework from project:"
          grep -oP '<TargetFramework>[^<]+' "${{ env.PROJECT_FILE_PATH }}" || echo "No TargetFramework found"

      - name: Restore dependencies
        run: dotnet restore "${{ env.PROJECT_FILE_PATH }}"

      - name: Build and Pack
        run: |
          # Build and pack in one step without --no-build
          dotnet pack "${{ env.PROJECT_FILE_PATH }}" \
            --configuration Release \
            --no-restore \
            --output ./nuget-packages \
            -p:Version=${{ env.PACKAGE_VERSION }} \
            -p:PackageVersion=${{ env.PACKAGE_VERSION }} \
            -p:IncludeSymbols=true \
            -p:SymbolPackageFormat=snupkg

      - name: List generated packages
        run: ls -la ./nuget-packages/

      - name: Validate NuGet Package
        run: |
          dotnet package validate ./nuget-packages/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.nupkg

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push "./nuget-packages/${{ env.PACKAGE_NAME }}.${{ env.PACKAGE_VERSION }}.nupkg" \
            --api-key ${{ secrets.RA_UTILITIES_NUGET_KEY }} \
            --source "https://api.nuget.org/v3/index.json" \
            --skip-duplicate

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          body: |
            Release for version ${{ env.PACKAGE_VERSION }} of the ${{ env.PACKAGE_NAME }} package.
            View on [NuGet.org](https://www.nuget.org/packages/${{ env.PACKAGE_NAME }}/${{ env.PACKAGE_VERSION }})
          files: ./nuget-packages/*
