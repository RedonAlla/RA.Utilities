# .github/workflows/publish-nuget.yml
name: Publish NuGet Package on Tag

on:
  push:
    tags:
      - '*-V*.*.*'

permissions:
  # This permission is required for the softprops/action-gh-release action to create a GitHub release.
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          # Use .NET 8.0 which is stable, or if you need 10.0, use a specific version
          dotnet-version: 10.0.*

      - name: Parse Tag and Set Environment Variables
        run: |
          TAG_NAME="${{ github.ref_name }}"

          PACKAGE_NAME="${TAG_NAME%-V*}"
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV

          PACKAGE_VERSION="${TAG_NAME##*-V}"
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_ENV

          PROJECT_FILE_PATH=$(find . -type f -name "${PACKAGE_NAME}.csproj" | head -n 1)
          echo "PROJECT_FILE_PATH=${PROJECT_FILE_PATH}" >> $GITHUB_ENV

          # Check for pre-release identifiers and set release body
          if [[ "${PACKAGE_VERSION}" == *"-rc"* || "${PACKAGE_VERSION}" == *"-alpha"* || "${PACKAGE_VERSION}" == *"-beta"* || "${PACKAGE_VERSION}" == *"-preview"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
            RELEASE_BODY=$(cat <<EOF
          ## Version ${PACKAGE_VERSION}

          This is a **pre-release** of the **${PACKAGE_NAME}** package.

          - **View on NuGet.org:** [${PACKAGE_NAME} ${PACKAGE_VERSION}](https://www.nuget.org/packages/${PACKAGE_NAME}/${PACKAGE_VERSION})
            *(You may need to enable "Include prerelease" to see it.)*
          EOF
                      )
                    else
                      echo "IS_PRERELEASE=false" >> $GITHUB_ENV
                      RELEASE_BODY=$(cat <<EOF
          ## Version ${PACKAGE_VERSION}

          This is a stable release of the **${PACKAGE_NAME}** package.

          - **View on NuGet.org:** [${PACKAGE_NAME} ${PACKAGE_VERSION}](https://www.nuget.org/packages/${PACKAGE_NAME}/${PACKAGE_VERSION})
          EOF
            )
          fi

          # Use a unique delimiter for multiline environment variables
          DELIMITER=$(openssl rand -hex 8)
          echo "RELEASE_BODY<<${DELIMITER}" >> $GITHUB_ENV
          echo "${RELEASE_BODY}" >> $GITHUB_ENV
          echo "${DELIMITER}" >> $GITHUB_ENV

      - name: Show project info
        run: |
          echo "Project file: ${{ env.PROJECT_FILE_PATH }}"
          echo "Target framework from project:"
          grep -oP '<TargetFramework>[^<]+' "${{ env.PROJECT_FILE_PATH }}" || echo "No TargetFramework found"

      - name: Restore dependencies
        run: dotnet restore "${{ env.PROJECT_FILE_PATH }}"

      - name: Build project
        run: dotnet build "${{ env.PROJECT_FILE_PATH }}" --configuration Release --no-restore

      - name: Build and Pack
        run: |
          # Pack the project, but do not build again
          dotnet pack "${{ env.PROJECT_FILE_PATH }}" \
            --configuration Release \
            --no-build \
            --no-restore \
            --output ./nuget-packages \
            -p:Version=${{ env.PACKAGE_VERSION }} \
            -p:PackageVersion=${{ env.PACKAGE_VERSION }} \
            -p:IncludeSymbols=true \
            -p:SymbolPackageFormat=snupkg

      - name: List generated packages
        run: ls -la ./nuget-packages/

      - name: Publish to NuGet.org
        run: |
          # Push both the main package and the symbols package
          dotnet nuget push "./nuget-packages/*.nupkg" \
            --api-key ${{ secrets.RA_UTILITIES_NUGET_KEY }} \
            --source "https://api.nuget.org/v3/index.json" \
            --skip-duplicate

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.PACKAGE_NAME }} v${{ env.PACKAGE_VERSION }}
          body: ${{ env.RELEASE_BODY }}
          files: ./nuget-packages/*
          prerelease: ${{ env.IS_PRERELEASE }}
