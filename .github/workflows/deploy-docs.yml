# .github/workflows/deploy-docs.yml
name: Deploy Documentation to GitHub Pages

on:
  # Runs on pushes targeting the main branch
  push:
    branches:
      - main
    # Only run if changes are made in the documentation directory
    paths:
      - 'documentation/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # Find Node.js version in the documentation's package.json
          node-version-file: 'documentation/package.json'
          cache: 'yarn'
          # Cache dependencies based on the documentation's lock file
          cache-dependency-path: 'documentation/yarn.lock'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./documentation
      - name: Build website
        run: yarn build
        working-directory: ./documentation
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the build output from the documentation folder
          path: './documentation/build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    # This job needs the build job to succeed
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
